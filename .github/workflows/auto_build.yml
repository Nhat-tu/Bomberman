name: Build and Release on Push

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Find JAR file (Linux)
        if: ${{ runner.os == 'Linux' }}
        id: find_jar_linux
        run: |
          JAR_FILE=$(find build/libs/ -name "*.jar" -not -name "*-sources.jar" -not -name "*-javadoc.jar")
          echo "JAR_FILE=$JAR_FILE" >> "$GITHUB_OUTPUT"

      - name: Find JAR file (Windows)
        if: ${{ runner.os == 'Windows' }}
        id: find_jar_windows
        run: |
          $jarFiles = Get-ChildItem -Path "build\libs\*.jar" -Exclude "*-sources.jar", "*-javadoc.jar"
          if ($jarFiles) {
            $latestJar = $jarFiles | Sort-Object LastWriteTime -Descending | Select-Object -First 1
            echo "JAR_FILE=$($latestJar.FullName)" | Out-File -Encoding UTF8 -Append -FilePath $env:GITHUB_OUTPUT
          } else {
            echo "JAR_FILE=" | Out-File -Encoding UTF8 -Append -FilePath $env:GITHUB_OUTPUT
          }

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-app
          path: ${{ steps.find_jar_linux.outputs.JAR_FILE || steps.find_jar_windows.outputs.JAR_FILE }}
        if: ${{ steps.find_jar_linux.outputs.JAR_FILE != '' || steps.find_jar_windows.outputs.JAR_FILE != '' }}
